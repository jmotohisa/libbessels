      PROGRAM ZQCAI
C
C***DATE WRITTEN   830501   (YYMMDD)
C***REVISION DATE  890801, 930101   (YYMMDD)
C
C                *** A DOUBLE PRECISION ROUTINE ***
C
C     ZQCAI IS A QUICK CHECK ROUTINE FOR THE COMPLEX AIRY FUNCTIONS
C     GENERATED BY SUBROUTINES ZAIRY AND ZBIRY.
C
C     ZQCAI GENERATES AIRY FUNCTIONS AND THEIR DERIVATIVES FROM ZAIRY
C     AND ZBIRY AND CHECKS THEM AGAINST THE WRONSKIAN EVALUATION IN THE
C     REGION -PI/3 .LE. ARG(Z) .LE. PI/3:
C
C                 AI(Z)*BI'(Z)-AI'(Z)*BI(Z)=1/PI.
C
C     IN THE REMAINDER OF THE CUT PLANE, THE IDENTITIES
C
C              AI(Z)  = SQRT(-Z)*( J(-1/3,ZR) + J(1/3,ZR) )/3
C
C              AI'(Z) =        Z*( J(-2/3,ZR) - J(2/3,ZR) )/3
C
C       BI(Z)  =   I*SQRT(-Z/3)*( C1*H(1/3,1,ZR) - C2*H(1/3,2,ZR) )/2
C
C       BI'(Z) = I*(-Z)/SQRT(3)*( C2*H(2/3,1,ZR) - C1*H(2/3,2,ZR) )/2
C
C     ARE CHECKED WHERE ZR = (2/3)(-Z)**(3/2) WITH C1 = EXP(PI*I/6),
C     C2 = CONJG(C1) AND I**2 = -1.
C
C     THE PARAMETER MQC CAN HAVE VALUES 1 (THE DEFAULT) FOR A FASTER,
C     LESS DEFINITIVE TEST OR 2 FOR A SLOWER, MORE DEFINITIVE TEST.
C
C     MACHINE CONSTANTS ARE DEFINED IN FUNCTIONS I1MACH, R1MACH, AND
C     D1MACH. THESE MUST BE SELECTED BY THE USER OR SET ACCORDING TO
C     PROLOGUE INSTRUCTIONS.
C
C     COMPLEX CA, CAV, CHI, CI, CONA, CONB, CONC, COND, CON1, CON2, CV,
C    *  CW, CY, W, Y, YY, Z, ZR, ZW, SC
      EXTERNAL ZABS
      DOUBLE PRECISION AA, ALIM, ATOL, CAR, CAI, CVR, CVI,
     * CON1I, CON1R, CON2I, CON2R, CONAI, CONAR, CONBI, CONBR, CONCI,
     * CONCR, CONDI, CONDR, C13, C23, C43, CAVR, CAVI, CIR, CII, CHIR,
     * CHII, CWI, CWR, CYI, CYR, CT, DIG, ELIM, EPS, ER, ERTOL, FNUL,
     * FPI, HPI, PI, PTR, R, RL, RPI, R1M4, R1M5, SPI, STI, STR, ST,
     * T, TOL, RM, WI, WR, YI, YR, YYR, YYI, ZI, ZR, ZRI, ZRR, ZWR, ZWI,
     * D1MACH, ZABS, PI3, SLAK, FILM, AB, TS, SCR, SCI
      INTEGER I, ICASE, IL, IR, IRB, IRSET, IT, ITL, K, KEPS, KODE, J,
     * JB, JL, K1, K2, LFLG, LUN, NZ, IERR, I1MACH, MQC, ICL, KDO
      DIMENSION ER(5), T(20), YR(20), YI(20), YYR(20), YYI(20), WR(20),
     * WI(20), KEPS(20), KDO(20)
      DATA LUN /7/
      PARAMETER (MQC=1)
      OPEN(LUN,FILE='ZQCAI.OUT')
C-----------------------------------------------------------------------
C     SET PARAMETERS RELATED TO MACHINE CONSTANTS.
C     TOL IS THE APPROXIMATE UNIT ROUNDOFF LIMITED TO 1.0E-18.
C     ELIM IS THE APPROXIMATE EXPONENTIAL OVER- AND UNDERFLOW LIMIT.
C     EXP(-ELIM).LT.EXP(-ALIM)=EXP(-ELIM)/TOL    AND
C     EXP(ELIM).GT.EXP(ALIM)=EXP(ELIM)*TOL       ARE INTERVALS NEAR
C     UNDERFLOW AND OVERFLOW LIMITS WHERE SCALED ARITHMETIC IS DONE.
C     RL IS THE LOWER BOUNDARY OF THE ASYMPTOTIC EXPANSION FOR LARGE Z.
C     DIG = NUMBER OF BASE 10 DIGITS IN TOL = 10**(-DIG).
C     FNUL IS THE LOWER BOUNDARY OF THE ASYMPTOTIC SERIES FOR LARGE FNU
C-----------------------------------------------------------------------
      R1M4 = D1MACH(4)
      TOL = MAX(R1M4,1.0D-18)
      AA = -DLOG10(R1M4)
      K1 = I1MACH(15)
      K2 = I1MACH(16)
      R1M5 = D1MACH(5)
      K = MIN(ABS(K1),ABS(K2))
      ELIM = 2.303D0*(DBLE(FLOAT(K))*R1M5-3.0D0)
      AB = AA*2.303D0
      ALIM = ELIM + MAX(-AB,-41.45D0)
      DIG = MIN(AA,18.0D0)
      FNUL = 10.0D0 + 6.0D0*(DIG-3.0D0)
      RL = 1.2D0*DIG + 3.0D0
      SLAK = 3.0D0+4.0D0*(-DLOG10(TOL)-7.0D0)/11.0D0
      SLAK = MAX(SLAK,3.0D0)
      ERTOL = TOL*10.0D0**SLAK
      RM = 0.5D0*(ALIM + ELIM)
      RM=MIN(RM,200.0D0)
      RM=MAX(RM,RL+10.0D0)
C-----------------------------------------------------------------------
      WRITE (LUN,99999)
99999 FORMAT (' QUICK CHECK ROUTINE FOR THE AIRY FUNCTIONS FROM ZAIRY AN
     *D ZBIRY'/)
      WRITE (LUN,99998)
99998 FORMAT (' PARAMETERS TOL,ELIM,ALIM,RL,FNUL,DIG')
      WRITE (LUN,99997) TOL, ELIM, ALIM, RL, FNUL, DIG
99997 FORMAT (6D12.4/)
      ATOL = 100.0D0*TOL
      FPI = DATAN(1.0D0)
      HPI = FPI + FPI
      PI = HPI + HPI
      RPI = 1.0D0/PI
      SPI = PI/6.0D0
      CON1R = COS(SPI)
      CON1I = SIN(SPI)
      CON2R = CON1R
      CON2I = -CON1I
      PI3 = SPI+SPI
      C13 = 1.0D0/3.0D0
      C23 = C13+C13
      C43 = C23+C23
      CAVR = SQRT(C13)
      CAVI = 0.0D0
      CHIR = 0.0D0
      CHII = 0.5D0
      CIR = 0.0D0
      CII = 1.0D0
      WRITE (LUN,99996) MQC
99996 FORMAT (/' CHECKS IN THE (Z,FNU) SPACE WITH MQC = ',I2/)
C-----------------------------------------------------------------------
C     TEST VALUES OF Z IN -PI.LT.ARG(Z).LE.PI
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
C     KDO(K), K=1,IL  DETERMINES WHICH OF THE IL ANGLES IN -PI TO PI
C     ARE USE TO COMPUTE VALUES OF Z
C       KDO(K) = 0  MEANS THAT THE INDEX K WILL BE USED FOR ONE OR TWO
C                   VALUES OF Z, DEPENDING ON THE CHOICE OF KEPS(K)
C              = 1  MEANS THAT THE INDEX K AND THE CORRESPONDING ANGLE
C                   WILL BE SKIPPED
C     KEPS(K), K=1,IL DETERMINES WHICH OF THE ANGLES GET INCREMENTED
C     UP AND DOWN TO PUT VALUES OF Z IN REGIONS WHERE DIFFERENT
C     FORMULAE ARE USED.
C       KEPS(K) =0  MEANS THAT THE ANGLE WILL BE USED WITHOUT CHANGE
C               =1  MEANS THAT THE ANGLE WILL BE INCREMENTED UP AND
C                   DOWN BY EPS
C     THE ANGLES TO BE USED ARE STORED IN THE T(I) ARRAY, I=1,ITL
C-----------------------------------------------------------------------
      IF (MQC.NE.2) THEN
        ICL=1
        IL=5
        DO 5 I=1,IL
          KDO(I)=0
          KEPS(I)=0
    5   CONTINUE
      ELSE
        ICL=2
        IL=7
        DO 6 I=1,IL
          KDO(I)=0
          KEPS(I)=0
    6   CONTINUE
        KEPS(2)=1
        KEPS(3)=1
        KEPS(5)=1
        KEPS(6)=1
      ENDIF
      I = 2
      EPS=0.01D0
      FILM=DBLE(FLOAT(IL-1))
      T(1) = -PI + EPS
      DO 30 K=2,IL
        IF(KDO(K).EQ.0) THEN
          T(I) = PI*DBLE(FLOAT(-IL+2*K-1))/FILM
          IF (KEPS(K).EQ.0) GO TO 20
          TS=T(I)
          T(I) = TS - EPS
          I = I + 1
          T(I) = TS + EPS
   20     CONTINUE
          I = I + 1
        ENDIF
   30 CONTINUE
      ITL = I - 1
      LFLG = 0
      DO 180 ICASE=1,ICL
        DO 170 KODE=1,2
          DO 160 IRSET=1,3
            IRB = MIN(IRSET,2)
            DO 150 IR=IRB,4
              GO TO (40, 50, 60), IRSET
   40         CONTINUE
              R =(0.2D0*DBLE(FLOAT(4-IR))+2.0D0*DBLE(FLOAT(IR-1)))/3.0D0
              GO TO 70
   50         CONTINUE
              R = (2.0D0*DBLE(FLOAT(4-IR))+RL*DBLE(FLOAT(IR-1)))/3.0D0
              GO TO 70
   60         CONTINUE
              R = (RL*DBLE(FLOAT(4-IR))+RM*DBLE(FLOAT(IR-1)))/3.0D0
   70         CONTINUE
              DO 140 IT=1,ITL
                CT = COS(T(IT))
                ST = SIN(T(IT))
                IF (DABS(CT).LT.ATOL) CT = 0.0D0
                IF (DABS(ST).LT.ATOL) ST = 0.0D0
                ZR = R*CT
                ZI = R*ST
                IF(ABS(T(IT)).LE.PI3) THEN
C-----------------------------------------------------------------------
C     WRONSKIAN CHECK IN -PI/3.LT.ARG(Z).LT.PI/3, TEST #1
C-----------------------------------------------------------------------
                  CALL ZAIRY(ZR, ZI, 0, KODE, YR(1), YI(1), NZ, IERR)
                  IF (NZ.NE.0.OR.IERR.NE.0) GO TO 140
                  CALL ZAIRY(ZR, ZI, 1, KODE, YR(2), YI(2), NZ, IERR)
                  IF (NZ.NE.0.OR.IERR.NE.0) GO TO 140
                  CALL ZBIRY(ZR, ZI, 0, KODE, WR(1), WI(1), IERR)
                  CALL ZBIRY(ZR, ZI, 1, KODE, WR(2), WI(2), IERR)
                  CWR = YR(1)*WR(2)-YI(1)*WI(2)
                  CWI = YR(1)*WI(2)+YI(1)*WR(2)
                  CYR = YR(2)*WR(1)-YI(2)*WI(1)
                  CYI = YR(2)*WI(1)+YI(2)*WR(1)
                  CVR = RPI
                  CVI = 0.0D0
                  IF (KODE.EQ.2) THEN
                    CALL ZSQRT(ZR,ZI,CAR,CAI)
                    ZRR = (ZR*CAR-ZI*CAI)*C23
                    ZRI = (ZR*CAI+ZI*CAR)*C23
                    AA=ABS(ZRR)
                    CAR = ZRR - AA
                    CAI = ZRI
                    CALL ZEXP(CAR,CAI,STR,STI)
                    PTR = STR*CVR-STR*CVI
                    CVI = STR*CVI+STI*CVR
                    CVR = PTR
                  ENDIF
                  CYR = CWR - CYR - CVR
                  CYI = CWI - CYI - CVI
                  ER(1) = ZABS(CYR,CYI)/ZABS(CVR,CVI)
                  JB = 1
                  JL = 1
                ELSE
C-----------------------------------------------------------------------
C     CHECKS IN -PI.LT.ARG(Z).LT.-PI/3 AND PI/3.LT.ARG(Z).LE.PI
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
C     CHECK AI    TEST #2
C-----------------------------------------------------------------------
                  CALL ZAIRY(ZR, ZI, 0, KODE, YR(2), YI(2), NZ, IERR)
                  IF (NZ.NE.0.OR.IERR.NE.0) GO TO 140
                  ZRR = -ZR
                  ZRI = -ZI
                  CALL ZSQRT(ZRR,ZRI,CVR,CVI)
                  PTR = (ZRR*CVR-ZRI*CVI)*C23
                  ZRI = (ZRR*CVI+ZRI*CVR)*C23
                  ZRR = PTR
                  CALL ZBESJ(ZRR,ZRI,C23,KODE,2,YYR,YYI,NZ,IERR)
                  IF (NZ.NE.0.OR.IERR.NE.0) GO TO 140
                  STR = YYR(1)*C43
                  STI = YYI(1)*C43
                  CALL ZDIV(STR,STI,ZRR,ZRI,STR,STI)
                  CYR = STR - YYR(2)
                  CYI = STI - YYI(2)
                  CAR = YYR(1)
                  CAI = YYI(1)
                  CALL ZBESJ(ZRR,ZRI,C13,KODE,2,YYR,YYI,NZ,IERR)
                  IF (NZ.NE.0.OR.IERR.NE.0) GO TO 140
                  IF (KODE.EQ.2) THEN
                    AB = ABS(ZRI)
                    CALL ZSQRT(ZR,ZI,CWR,CWI)
                    ZWR = (ZR*CWR-ZI*CWI)*C23
                    ZWI = (ZR*CWI+ZI*CWR)*C23
                    CWR = ZWR+AB
                    CWI = ZWI
                    CALL ZEXP(CWR,CWI,STR,STI)
                    CWR = STR
                    CWI = STI
                    STR = YYR(1)*CWR-YYI(1)*CWI
                    YYI(1) = YYR(1)*CWI+YYI(1)*CWR
                    YYR(1) = STR
                    STR = YYR(2)*CWR-YYI(2)*CWI
                    YYI(2) = YYR(2)*CWI+YYI(2)*CWR
                    YYR(2) = STR
                    STR = CYR*CWR-CYI*CWI
                    CYI = CYR*CWI+CYI*CWR
                    CYR = STR
                    STR = CAR*CWR-CAI*CWI
                    CAI = CAR*CWI+CAI*CWR
                    CAR = STR
                    SCR = CWR
                    SCI = CWI
                  ENDIF
                  CWR = CVR*C13
                  CWI = CVI*C13
                  WR(2) = CWR*(YYR(1)+CYR)-CWI*(YYI(1)+CYI)
                  WI(2) = CWR*(YYI(1)+CYI)+CWI*(YYR(1)+CYR)
                  STR = YR(2)-WR(2)
                  STI = YI(2)-WI(2)
                  ER(2) = ZABS(STR,STI)
                  IF (ZI.NE.0.0D0.OR.ZR.GE.0.0D0) THEN
                    ER(2) = ER(2)/ZABS(YR(2),YI(2))
                  ELSE
                    IF (KODE.EQ.2) THEN
                      ER(2) = ER(2)/ZABS(SCR,SCI)
                    ENDIF
                  ENDIF
C-----------------------------------------------------------------------
C     CHECK AI'   TEST #3
C-----------------------------------------------------------------------
                  STR = YYR(1)*C23
                  STI = YYI(1)*C23
                  CALL ZDIV(STR,STI,ZRR,ZRI,CYR,CYI)
                  CYR = CYR-YYR(2)-CAR
                  CYI = CYI-YYI(2)-CAI
                  WR(3) = (ZR*CYR-ZI*CYI)*C13
                  WI(3) = (ZR*CYI+ZI*CYR)*C13
                  CALL ZAIRY(ZR, ZI, 1, KODE, YR(3), YI(3), NZ, IERR)
                  STR = YR(3)-WR(3)
                  STI = YI(3)-WI(3)
                  ER(3) = ZABS(STR,STI)
                  IF (ZI.NE.0.0D0.OR.ZR.GE.0.0D0) THEN
                    ER(3) = ER(3)/ZABS(YR(3),YI(3))
                  ELSE
                    IF (KODE.EQ.2) THEN
                      ER(3) = ER(3)/ZABS(SCR,SCI)
                    ENDIF
                  ENDIF
C-----------------------------------------------------------------------
C     CHECK BI    TEST #4
C-----------------------------------------------------------------------
                  CALL ZBESH(ZRR,ZRI,C13,KODE,1,1,YR,YI,NZ,IERR)
                  IF (NZ.NE.0.OR.IERR.NE.0) GO TO 140
                  CALL ZBESH(ZRR,ZRI,C13,KODE,2,1,YYR,YYI,NZ,IERR)
                  IF (NZ.NE.0.OR.IERR.NE.0) GO TO 140
                  CONAR = CON1R
                  CONAI = CON1I
                  CONBR = CON2R
                  CONBI = CON2I
                  CONCR = CON2R
                  CONCI = CON2I
                  CONDR = CON1R
                  CONDI = CON1I
                  IF (KODE.EQ.2) THEN
                    AA = ABS(ZWR)
                    ZWR = CIR*ZRR-CII*ZRI-AA
                    ZWI = CIR*ZRI+CII*ZRR
                    CALL ZEXP(ZWR,ZWI,CWR,CWI)
                    STR = CONAR*CWR-CONAI*CWI
                    CONAI =CONAR*CWI+CONAI*CWR
                    CONAR = STR
                    STR = CONCR*CWR-CONCI*CWI
                    CONCI =CONCR*CWI+CONCI*CWR
                    CONCR = STR
                    ZWR = -(CIR*ZRR-CII*ZRI)-AA
                    ZWI = -(CIR*ZRI+CII*ZRR)
                    CALL ZEXP(ZWR,ZWI,CWR,CWI)
                    STR = CONBR*CWR-CONBI*CWI
                    CONBI =CONBR*CWI+CONBI*CWR
                    CONBR = STR
                    STR = CONDR*CWR-CONDI*CWI
                    CONDI =CONDR*CWI+CONDI*CWR
                    CONDR = STR
                    SCR = CWR
                    SCI = CWI
                  ENDIF
                  CWR = CONAR*YR(1)-CONAI*YI(1)
                  CWI = CONAR*YI(1)+CONAI*YR(1)
                  CWR = CWR - (CONBR*YYR(1)-CONBI*YYI(1))
                  CWI = CWI - (CONBR*YYI(1)+CONBI*YYR(1))
                  STR = CVR*CAVR-CVI*CAVI
                  STI = CVR*CAVI+CVI*CAVR
                  PTR = STR*CWR-STI*CWI
                  CWI = STR*CWI+STI*CWR
                  CWR = PTR
                  WR(4) = CWR*CHIR-CWI*CHII
                  WI(4) = CWR*CHII+CWI*CHIR
                  CALL ZBIRY(ZR,ZI,0,KODE,YR(4),YI(4),IERR)
                  STR = YR(4)-WR(4)
                  STI = YI(4)-WI(4)
                  ER(4) = ZABS(STR,STI)
                  IF (ZI.NE.0.0D0.OR.ZR.GE.0.0D0) THEN
                    ER(4) = ER(4)/ZABS(YR(4),YI(4))
                  ELSE
                    IF (KODE.EQ.2) THEN
                      ER(4) = ER(4)/ZABS(SCR,SCI)
                    ENDIF
                  ENDIF
C-----------------------------------------------------------------------
C     CHECK BI'   TEST #5
C-----------------------------------------------------------------------
                  CALL ZBESH(ZRR,ZRI,C23,KODE,1,1,YR,YI,NZ,IERR)
                  IF (NZ.NE.0.OR.IERR.NE.0) GO TO 140
                  CALL ZBESH(ZRR,ZRI,C23,KODE,2,1,YYR,YYI,NZ,IERR)
                  IF (NZ.NE.0.OR.IERR.NE.0) GO TO 140
                  CWR = CONCR*YR(1)-CONCI*YI(1)
                  CWI = CONCR*YI(1)+CONCI*YR(1)
                  CWR = CWR - (CONDR*YYR(1)-CONDI*YYI(1))
                  CWI = CWI - (CONDR*YYI(1)+CONDI*YYR(1))
                  STR = -(ZR*CAVR-ZI*CAVI)
                  STI = -(ZR*CAVI+ZI*CAVR)
                  PTR = STR*CWR-STI*CWI
                  CWI = STR*CWI+STI*CWR
                  CWR = PTR
                  WR(5) = CWR*CHIR-CWI*CHII
                  WI(5) = CWR*CHII+CWI*CHIR
                  CALL ZBIRY(ZR,ZI,1,KODE,YR(5),YI(5),IERR)
                  STR = YR(5)-WR(5)
                  STI = YI(5)-WI(5)
                  ER(5) = ZABS(STR,STI)
                  IF (ZI.NE.0.0D0.OR.ZR.GE.0.0D0) THEN
                    ER(5) = ER(5)/ZABS(YR(5),YI(5))
                  ELSE
                    IF (KODE.EQ.2) THEN
                      ER(5) = ER(5)/ZABS(SCR,SCI)
                    ENDIF
                  ENDIF
                  JB = 2
                  JL = 5
                ENDIF
                DO 190 J=JB,JL
                IF (ER(J).LT.ERTOL) GO TO 190
                IF (LFLG.EQ.1) GO TO 130
                WRITE (LUN,99995) ERTOL
99995           FORMAT (/' CASES WHICH VIOLATE THE RELATIVE ERROR TEST W
     *ITH ERTOL =', E12.4/)
                WRITE (LUN,99994)
99994           FORMAT (/' OUTPUT FORMAT'/' KODE,IR,IT,IRSET,ICASE')
                WRITE (LUN,99993)
99993           FORMAT (' ER'/' I, Z, Y(I), W(I), ON THE I-TH TEST, I=1,
     *5'/)
                LFLG = 1
  130           CONTINUE
                WRITE (LUN,99992) KODE, IR, IT, IRSET, ICASE
99992           FORMAT (5I5)
                WRITE (LUN,99991) ER(J)
                WRITE (LUN,99989) J, ZR, ZI, YR(J), YI(J), WR(J), WI(J)
99991           FORMAT (D12.4)
99989           FORMAT (I5,6D12.4)
  190           CONTINUE
  140         CONTINUE
  150       CONTINUE
  160     CONTINUE
  170   CONTINUE
  180 CONTINUE
      IF (LFLG.EQ.0) WRITE (LUN,99990)
99990 FORMAT (/' QUICK CHECKS OK'/)
      STOP
      END
