      PROGRAM ZQCBI
C
C***DATE WRITTEN   830501   (YYMMDD)
C***REVISION DATE  890801, 930101   (YYMMDD)
C
C                *** A DOUBLE PRECISION ROUTINE ***
C
C     ZQCBI IS A QUICK CHECK ROUTINE FOR THE COMPLEX I BESSEL FUNCTION
C     GENERATED BY SUBROUTINE ZBESI.
C
C     ZQCBK GENERATES SEQUENCES OF I AND K BESSEL FUNCTIONS FROM
C     ZBESI AND CBESK AND CHECKS THE WRONSKIAN EVALUATION
C
C           I(FNU,Z)*K(FNU+1,Z) + I(FNU+1,Z)*K(FNU,Z) = 1/Z
C
C     IN THE RIGHT HALF PLANE AND A MODIFIED FORM
C
C          I(FNU+1,Z)*K(FNU,ZR) - I(FNU,Z)*K(FNU+1,ZR) = C/Z
C
C     IN THE LEFT HALF PLANE WHERE ZR=-Z AND C=EXP(I*FNU*SGN) WITH
C     SGN=+1 FOR IM(Z).GE.0 AND SGN=-1 FOR IM(Z).LT.0.
C
C     THE PARAMETER MQC CAN HAVE VALUES 1 (THE DEFAULT) FOR A FASTER,
C     LESS DEFINITIVE TEST OR 2 FOR A SLOWER, MORE DEFINITIVE TEST.
C
C     MACHINE CONSTANTS ARE DEFINED IN FUNCTIONS I1MACH, R1MACH, AND
C     D1MACH. THESE MUST BE SELECTED BY THE USER OR SET ACCORDING TO
C     PROLOGUE INSTRUCTIONS.
C
C     COMPLEX  CONE, CSGN, CC, CV, CW, CY, W, Y, Z, ZR
      EXTERNAL ZABS
      DOUBLE PRECISION AA, AB, AER, ALIM, ARG, ATOL, CCR, CONER, CONEI,
     * CSGNI, CSGNR, CWI, CWR, CYI, CYR, CVR, CVI, DIG, ELIM, EPS, ER,
     * ERTOL, FNU, FNUL, GNU, HPI, PI, R, RL, R1M4, R1M5, R2, RM,
     * STI, STR, T, TOL, WI, WR, YI, YR, ZI, ZR, ZRI, ZRR, D1MACH, ZABS,
     * FILM, SLAK, TS, ST, CT, FFNU, XNU
      INTEGER I, ICASE, IL, IFNU, IPRNT, IR, IT, ITL, K, KK, KODE, K1,
     * K2, LFLG, LUN, MFLG, N, NZ, N1, NL, NU, NUL, MQC, IERR, I1MACH,
     * KEPS, KDO, IRB
      DIMENSION T(20), AER(20), YR(20), YI(20), WR(20), WI(20), XNU(20),
     *  KEPS(20), KDO(20)
      DATA LUN /7/
      PARAMETER (MQC=1)
      OPEN(LUN, FILE='ZQCBI.OUT')
C-----------------------------------------------------------------------
C     SET PARAMETERS RELATED TO MACHINE CONSTANTS.
C     TOL IS THE APPROXIMATE UNIT ROUNDOFF LIMITED TO 1.0E-18.
C     ELIM IS THE APPROXIMATE EXPONENTIAL OVER- AND UNDERFLOW LIMIT.
C     EXP(-ELIM).LT.EXP(-ALIM)=EXP(-ELIM)/TOL    AND
C     EXP(ELIM).GT.EXP(ALIM)=EXP(ELIM)*TOL       ARE INTERVALS NEAR
C     UNDERFLOW AND OVERFLOW LIMITS WHERE SCALED ARITHMETIC IS DONE.
C     RL IS THE LOWER BOUNDARY OF THE ASYMPTOTIC EXPANSION FOR LARGE Z.
C     DIG = NUMBER OF BASE 10 DIGITS IN TOL = 10**(-DIG).
C     FNUL IS THE LOWER BOUNDARY OF THE ASYMPTOTIC SERIES FOR LARGE FNU
C-----------------------------------------------------------------------
      R1M4 = D1MACH(4)
      TOL = MAX(R1M4,1.0D-18)
      AA = -DLOG10(R1M4)
      K1 = I1MACH(15)
      K2 = I1MACH(16)
      R1M5 = D1MACH(5)
      K = MIN(IABS(K1),IABS(K2))
      ELIM = 2.303D0*(DBLE(FLOAT(K))*R1M5-3.0D0)
      AB = AA*2.303D0
      ALIM = ELIM + MAX(-AB,-41.45D0)
      DIG = MIN(AA,18.0D0)
      FNUL = 10.0D0 + 6.0D0*(DIG-3.0D0)
      RL = 1.2D0*DIG + 3.0D0
      SLAK = 3.0D0+4.0D0*(-DLOG10(TOL)-7.0D0)/11.0D0
      SLAK = MAX(SLAK,3.0D0)
      ERTOL = TOL*10.0D0**SLAK
      RM = 0.5D0*(ALIM + ELIM)
      RM = MIN(RM,200.0D0)
      RM = MAX(RM,RL+10.0D0)
      R2 = MIN(RM,FNUL)
C-----------------------------------------------------------------------
      WRITE (LUN,99999)
99999 FORMAT (' QUICK CHECK ROUTINE FOR THE I BESSEL FUNCTION FROM ZBESI
     *'/)
      WRITE (LUN,99998)
99998 FORMAT (' PARAMETERS TOL,ELIM,ALIM,RL,FNUL,DIG')
      WRITE (LUN,99997) TOL, ELIM, ALIM, RL, FNUL, DIG
99997 FORMAT (6D12.4/)
      CONER = 1.0D0
      CONEI = 0.0D0
      ATOL = 100.0D0*TOL
      HPI = 2.0D0*DATAN(1.0D0)
      PI = HPI + HPI
      WRITE (LUN,99996) MQC
99996 FORMAT (/' CHECKS IN THE (Z,FNU) SPACE WITH MQC = ',I2/)
C-----------------------------------------------------------------------
C     TEST VALUES OF Z IN -PI.LT.ARG(Z).LE.PI NEAR FORMULA BOUNDARIES
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
C     KDO(K), K=1,IL  DETERMINES WHICH OF THE IL ANGLES IN -PI TO PI
C     ARE USE TO COMPUTE VALUES OF Z
C       KDO(K) = 0  MEANS THAT THE INDEX K WILL BE USED FOR ONE OR TWO
C                   VALUES OF Z, DEPENDING ON THE CHOICE OF KEPS(K)
C              = 1  MEANS THAT THE INDEX K AND THE CORRESPONDING ANGLE
C                   WILL BE SKIPPED
C     KEPS(K), K=1,IL DETERMINES WHICH OF THE ANGLES GET INCREMENTED
C     UP AND DOWN TO PUT VALUES OF Z IN REGIONS WHERE DIFFERENT
C     FORMULAE ARE USED.
C       KEPS(K) =0  MEANS THAT THE ANGLE WILL BE USED WITHOUT CHANGE
C               =1  MEANS THAT THE ANGLE WILL BE INCREMENTED UP AND
C                   DOWN BY EPS
C     THE ANGLES TO BE USED ARE STORED IN THE T(I) ARRAY, I=1,ITL
C-----------------------------------------------------------------------
      IF (MQC.NE.2) THEN
        NL=2
        IL=5
        DO 5 I=1,IL
          KEPS(I)=0
          KDO(I)=0
    5   CONTINUE
        NUL=5
        XNU(1) = 0.0E0
        XNU(2) = 1.0E0
        XNU(3) = 2.0E0
        XNU(4) = 0.5E0*FNUL
        XNU(5) = FNUL + 1.1E0
      ELSE
        NL=4
        IL=13
        DO 6 I=1,IL
          KDO(I)=0
          KEPS(I)=0
    6   CONTINUE
        KDO(2)=1
        KDO(6)=1
        KDO(8)=1
        KDO(12)=1
        KEPS(3)=1
        KEPS(4)=1
        KEPS(5)=1
        KEPS(9)=1
        KEPS(10)=1
        KEPS(11)=1
        NUL=6
        XNU(1) = 0.0E0
        XNU(2) = 0.6E0
        XNU(3) = 1.3E0
        XNU(4) = 2.0E0
        XNU(5) = 0.5E0*FNUL
        XNU(6) = FNUL + 1.1E0
      ENDIF
      I = 2
      EPS = 0.01D0
      FILM=DBLE(FLOAT(IL-1))
      T(1) = -PI + EPS
      DO 30 K=2,IL
        IF (KDO(K).EQ.0) THEN
          T(I) = PI*DBLE(FLOAT(-IL+2*K-1))/FILM
          IF (KEPS(K).EQ.0) GO TO 20
          TS=T(I)
          T(I) = TS - EPS
          I = I + 1
          T(I) = TS + EPS
   20     CONTINUE
          I = I + 1
        ENDIF
   30 CONTINUE
      ITL = I - 1
      LFLG = 0
      DO 200 KODE=1,2
        DO 190 N=1,NL
          N1 = N + 1
          DO 180 NU=1,NUL
            FNU = XNU(NU)
            IFNU = INT(SNGL(FNU))
            FFNU = FNU - DBLE(FLOAT(IFNU))
            ARG = PI*FFNU
            CSGNR = DCOS(ARG)
            CSGNI = DSIN(ARG)
            IF (MOD(IFNU,2).EQ.0) GO TO 50
            CSGNR = -CSGNR
            CSGNI = -CSGNI
   50       CONTINUE
            DO 170 ICASE=1,3
              IRB = MIN(2,ICASE)
              DO 160 IR=IRB,4
                GO TO (60, 70, 80), ICASE
   60           CONTINUE
                R = (0.2D0*DBLE(FLOAT(4-IR))+2.0D0*DBLE(FLOAT(IR-1)))/
     *           3.0D0
                GO TO 90
   70           CONTINUE
                R = (2.0D0*DBLE(FLOAT(4-IR))+R2*DBLE(FLOAT(IR-1)))/3.0D0
                GO TO 90
   80           CONTINUE
                IF (R2.EQ.RM) GO TO 180
                R = (R2*DBLE(FLOAT(4-IR))+RM*DBLE(FLOAT(IR-1)))/3.0D0
   90           CONTINUE
                DO 150 IT=1,ITL
                  CT = COS(T(IT))
                  ST = SIN(T(IT))
                  IF (DABS(CT).LT.ATOL) CT = 0.0D0
                  IF (DABS(ST).LT.ATOL) ST = 0.0D0
                  ZR = R*CT
                  ZI = R*ST
                  IF (CT.GE.0.0E0) THEN
C-----------------------------------------------------------------------
C     WRONSKIAN CHECKS IN THE RIGHT HALF PLANE
C-----------------------------------------------------------------------
                    CALL ZBESI(ZR, ZI, FNU, KODE, N1, WR, WI, NZ, IERR)
                    IF (NZ.NE.0.OR.IERR.NE.0) GO TO 150
                    CALL ZBESK(ZR, ZI, FNU, KODE, N1, YR, YI, NZ, IERR)
                    IF (NZ.NE.0.OR.IERR.NE.0) GO TO 150
C-----------------------------------------------------------------------
C     ADJUSTMENTS TO WRONSKIAN DUE TO SCALING OF I AND K FUNCTIONS
C     ON KODE=2
C-----------------------------------------------------------------------
                    CALL ZDIV(CONER,CONEI,ZR,ZI,CVR,CVI)
                    IF (KODE.EQ.2) THEN
                      STR = COS(ZI)
                      STI = SIN(ZI)
                      AA = STR*CVR - STI*CVI
                      CVI = STR*CVI + STI*CVR
                      CVR = AA
                    ENDIF
                    CCR = 1.0D0
                  ELSE
C-----------------------------------------------------------------------
C     WRONSKIAN CHECKS IN THE LEFT HALF PLANE
C-----------------------------------------------------------------------
                    ZRR = -ZR
                    ZRI = -ZI
                    CALL ZBESI(ZR, ZI, FNU, KODE, N1, YR, YI, NZ, IERR)
                    IF (NZ.NE.0.OR.IERR.NE.0) GO TO 150
                    CALL ZBESK(ZRR,ZRI, FNU, KODE, N1, WR, WI, NZ, IERR)
                    IF (NZ.NE.0.OR.IERR.NE.0) GO TO 150
                    CVR = CSGNR
                    CVI = CSGNI
                    IF (ZI.LT.0.0E0) THEN
                      CVI = -CVI
                    ENDIF
                    CALL ZDIV(CVR,CVI,ZR,ZI,CVR,CVI)
                    IF (KODE.EQ.2) THEN
C-----------------------------------------------------------------------
C     ADJUSTMENTS TO WRONSKIAN DUE TO SCALING OF I AND K FUNCTIONS
C     ON KODE=2. SCALE FACTOR = EXP(-I*YY) FOR RE(Z).LT.0
C-----------------------------------------------------------------------
                      CWR = COS(ZI)
                      CWI = -SIN(ZI)
                      STR = CVR*CWR-CVI*CWI
                      CVI = CVR*CWI+CVI*CWR
                      CVR = STR
                    ENDIF
                    CCR = -1.0D0
                  ENDIF
                  MFLG = 0
                  KK = 0
                  DO 130 I=1,N
                    CWR = WR(I)*YR(I+1)-WI(I)*YI(I+1)
                    CWI = WR(I)*YI(I+1)+WI(I)*YR(I+1)
                    CYR = YR(I)*WR(I+1)-YI(I)*WI(I+1)
                    CYI = YR(I)*WI(I+1)+YI(I)*WR(I+1)
                    CYR = CCR*CYR
                    CYI = CCR*CYI
                    CYR = CYR + CWR - CVR
                    CYI = CYI + CWI - CVI
                    ER = ZABS(CYR,CYI)/ZABS(CVR,CVI)
                    AER(I) = ER
                    IF (ER.GT.ERTOL) THEN
                      IF(KK.EQ.0) THEN
                        MFLG = 1
                        KK=I
                      ENDIF
                    ENDIF
                    IF (CT.LT.0.0E0) THEN
                      CVR = -CVR
                      CVI = -CVI
                    ENDIF
  130             CONTINUE
                  IF (MFLG.EQ.0) GO TO 150
                  IF (LFLG.EQ.1) GO TO 140
                  WRITE (LUN,99995) ERTOL
99995             FORMAT (/' CASES WHICH VIOLATE THE RELATIVE ERROR TEST
     * WITH ERTOL =', E12.4/)
                  WRITE (LUN,99994)
99994             FORMAT (/' OUTPUT FORMAT'/' KODE,N,IR,IT,ICASE,KK')
                  WRITE (LUN,99993)
99993             FORMAT (' ER(K),K=1,N'/' Z,FNU,Y(KK)        KK=INDEX O
     *F FIRST NON-ZERO PAIR'/)
                  LFLG = 1
  140             CONTINUE
                  WRITE (LUN,99992) KODE, N, IR, IT, ICASE, KK
99992             FORMAT (6I5)
                  WRITE (LUN,99991) (AER(K),K=1,N)
                  WRITE (LUN,99991) ZR, ZI, FNU, YR(KK), YI(KK)
99991             FORMAT (6D12.4)
  150           CONTINUE
  160         CONTINUE
  170       CONTINUE
  180     CONTINUE
  190   CONTINUE
  200 CONTINUE
      IF (LFLG.EQ.0) WRITE (LUN,99990)
99990 FORMAT (/' QUICK CHECKS OK'/)
      IF (MQC.EQ.1) STOP
C-----------------------------------------------------------------------
C     CHECKS NEAR UNDERFLOW LIMITS ON SERIES(I=1) AND UNIFORM
C     ASYMPTOTIC EXPANSION(I=2)
C-----------------------------------------------------------------------
      WRITE (LUN,99989)
99989 FORMAT (/' CHECKS NEAR UNDERFLOW AND OVERFLOW LIMITS'/)
      ZR = 1.4D0
      ZI = 1.4D0
      IPRNT = 0
      DO 280 I=1,2
        FNU = 10.2D0
        KODE = 1
        N = 20
  230   CONTINUE
        CALL ZBESI(ZR, ZI, FNU, KODE, N, YR, YI, NZ, IERR)
        IF (NZ.NE.0) GO TO 240
        FNU = FNU + 5.0D0
        GO TO 230
  240   CONTINUE
        IF (NZ.LT.10) GO TO 250
        FNU = FNU - 1.0D0
        GO TO 230
  250   CONTINUE
        CALL ZBESK(ZR, ZI, FNU, KODE, 2, WR, WI, NZ, IERR)
        CALL ZDIV(CONER, CONEI, ZR, ZI, STR, STI)
        CYR = WR(1)*YR(2) - WI(1)*YI(2)
        CYI = WR(1)*YI(2) + WI(1)*YR(2)
        CWR = WR(2)*YR(1) - WI(2)*YI(1)
        CWI = WR(2)*YI(1) + WI(2)*YR(1)
        CWR = CWR + CYR - STR
        CWI = CWI + CYI - STI
        ER = ZABS(CWR,CWI)/ZABS(STR,STI)
        IF (ER.LT.ERTOL) GO TO 270
        IF (IPRNT.EQ.1) GO TO 260
        WRITE (LUN,99988)
99988   FORMAT (/' OUTPUT FORMAT/19H ERROR,Z,FNU,KODE,N'/)
        IPRNT = 1
  260   CONTINUE
        WRITE (LUN,99987) ER, ZR, ZI, FNU, KODE, N
99987   FORMAT (4D12.4, 2I5)
  270   CONTINUE
        ZR = RL +RL
        ZI = 0.0D0
  280 CONTINUE
C-----------------------------------------------------------------------
C     CHECK NEAR OVERFLOW LIMITS
C-----------------------------------------------------------------------
      ZR = ELIM
      ZI = 0.0D0
      FNU = 0.0D0
  290 CONTINUE
      CALL ZBESK(ZR, ZI, FNU, KODE, N, YR, YI, NZ, IERR)
      IF (NZ.LT.10) GO TO 300
      IF (NZ.EQ.N) FNU = FNU + 3.0D0
      FNU = FNU + 2.0D0
      GO TO 290
  300 CONTINUE
      GNU = FNU + DBLE(FLOAT(N-2))
      CALL ZBESI(ZR, ZI, GNU, KODE, 2, WR, WI, NZ, IERR)
      CALL ZDIV(CONER, CONEI, ZR, ZI, STR, STI)
      CYR = YR(N-1)*WR(2) - YI(N-1)*WI(2)
      CYI = YR(N-1)*WI(2) + YI(N-1)*WR(2)
      CWR = YR(N)*WR(1) - YI(N)*WI(1)
      CWI = YR(N)*WI(1) + YI(N)*WR(1)
      CWR = CWR + CYR - STR
      CWI = CWI + CYI - STI
      ER = ZABS(CWR,CWI)/ZABS(STR,STI)
      IF (ER.LT.ERTOL) GO TO 320
      IF (IPRNT.EQ.1) GO TO 310
      WRITE (LUN,99988)
      IPRNT = 1
  310 CONTINUE
      WRITE (LUN,99987) ER, ZR, ZI, FNU, KODE, N
  320 CONTINUE
      IF (IPRNT.EQ.0) WRITE (LUN,99990)
      STOP
      END
